# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_template.ipynb.

# %% auto 0
__all__ = ['Template']

# %% ../nbs/03_template.ipynb 3
from .imports import *
from .utils import *
from .chem import Molecule
from .filter import Filter, FilterResult

# %% ../nbs/03_template.ipynb 4
class Template():
    def __init__(self, filters: list[Filter]):
        self.filters = filters
        
    def __call__(self, molecule: Molecule, early_exit: bool=True) -> Tuple[bool, list[bool], list[FilterResult]]:
        filter_results = [None for i in self.filters]
        filter_summary = [False for i in self.filters]
        
        for i, f in enumerate(filters):
            results = f(molecule)
            filter_results[i] = results
            filter_summary[i] = results.filter_result

            if (not results.filter_result) and early_exit:
                break
                
        filter_agg = all(filter_summary)
                
        return (filter_agg, filter_summary, filter_results)
